# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
  [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd =
  {
    availableKernelModules = [ "xhci_pci" "uas" ];
    kernelModules          = [ "dm-snapshot" ];
    services.lvm.enable    = true;
  };


  fileSystems =
  {
    "/" = lib.mkForce
    {
      device = "/dev/disk/by-label/ember-root";
      fsType = "ext4";
    };

    "/boot" =
    {
      device = "/dev/disk/by-label/RPI_BOOT";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

    "/home" =
    {
      device = "/dev/disk/by-label/ember-home";
      fsType = "ext4";
    };

    "/var/lib/docker" =
    {
      device = "/dev/disk/by-label/ember-docker";
      fsType = "ext4";
    };
  };

  swapDevices = [ { device = "/dev/ember/swap"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
