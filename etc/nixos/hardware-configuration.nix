# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "firewire_ohci" "xhci_pci" "usb_storage" "sd_mod" "sr_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  boot.initrd.luks.devices."catfish-crypt".device = "/dev/disk/by-uuid/39ee46d1-f9bf-4332-a438-9db1a42d6312";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/60E0-A7D2";
      fsType = "vfat";
    };

  fileSystems."/.btrfs-root" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/.swap" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=swap" ];
    };

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=snapshots" ];
    };

  fileSystems."/.snapshots.externalhdd" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=snapshots.externalhdd" ];
    };

  fileSystems."/var/cache" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=var-cache" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=var-log" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=var-tmp" ];
    };

  fileSystems."/var/lib/libvirt/images" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=vms" ];
    };

  fileSystems."/home/andy3153/games" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=games" ];
    };

  fileSystems."/home/andy3153/torrents" =
    { device = "/dev/disk/by-uuid/f44c3630-808d-4d73-a195-d3e36bde2ce3";
      fsType = "btrfs";
      options = [ "subvol=torrents" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
